---
version: 2.1

orbs:
  win: circleci/windows@2.2.0
  npm-release-management: salesforce/npm-release-management@2.0.0

parameters:
  fingerprint:
    type: string
    default: '1e:57:e5:df:0e:82:aa:ff:33:b7:8c:0f:9c:28:56:f3'
  publish:
    type: boolean
    default: false
  publish-type:
    type: string
    default: minor

commands:
  setup-publish:
    description: 'Configure GitHub, Checkout, Install, Bump Package Version, Build'
    steps:
      - run:
          name: Configuring GitHub
          command: |
            git config --global credential.helper 'cache --timeout=120'
            git config --global user.email "$GH_EMAIL"
            git config --global user.name "Release Bot"
      - checkout
      - restore_cache:
          keys:
            - v2-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
            - v2-npm-{{checksum ".circleci/config.yml"}}
      - run:
          name: Install dependencies
          command: |
            yarn --version
            node --version
            yarn
      - run:
          name: Bump package version
          command: |
            npx lerna version << pipeline.parameters.publish-type >> --force-publish --no-git-tag-version --exact --yes
            git add .
            export RELEASE_TAG="$(node -pe "require('./lerna.json').version")"
            git commit -m "Updated version $RELEASE_TAG"
      - run:
          name: Build project
          command: yarn build
      - run:
          name: Generate plugin manifest
          command: yarn manifest:generate
      - run:
          name: Pack Library
          working_directory: ./packages/templates
          command: npm pack

  ssh-config:
    steps:
      - add_ssh_keys:
          fingerprints:
            - << pipeline.parameters.fingerprint >>
      - run: ssh-keyscan -H github.com >> ~/.ssh/known_hosts

jobs:
  node-latest: &test
    docker:
      - image: node:latest
    working_directory: ~/cli
    steps:
      - checkout
      - restore_cache: &restore_cache
          keys:
            - v2-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
            - v2-npm-{{checksum ".circleci/config.yml"}}
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Build plugin
          command: yarn build
      - run:
          name: Lint source files
          command: yarn lint
      - run:
          name: Testing
          command: yarn test
  node-12:
    <<: *test
    docker:
      - image: node:12
  node-10:
    <<: *test
    docker:
      - image: node:10
  cache:
    <<: *test
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: v2-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
          paths:
            - ~/cli/node_modules
            - /usr/local/share/.cache/yarn
            - /usr/local/share/.config/yarn

  run-win-tests:
    description: 'Run tests on Windows'
    executor: win/default
    steps:
      - run: git config --global core.autocrlf false
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-win1-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
            # if cache for exact version of 'package.json' is not present, then load the most recent cache
            - dependency-cache-win1-
      - run:
          name: 'Install dependencies'
          command: |
            yarn --version
            node --version
            yarn
            yarn global add codecov
      - save_cache:
          key: dependency-cache-win1-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
          paths:
            - node_modules
      - run:
          name: 'Compile'
          command: |
            yarn build
      - run:
          name: 'Running unit tests'
          command: |
            yarn test
      - run:
          name: Submitting code coverage to codecov
          command: |
            npx codecov --disable=gcov

  prepublish:
    description: 'Prepublish'
    working_directory: ~/cli
    docker:
      - image: node:12
    steps:
      - setup-publish
      - persist_to_workspace:
          root: .
          paths:
            - .git
            - packages/templates/package.json
            - packages/templates/*.tgz
            - packages/plugin-templates/.gitignore
            - packages/plugin-templates/package.json
            - packages/plugin-templates/README.md
            - packages/plugin-templates/yarn.lock
            - packages/plugin-templates/messages
            - packages/plugin-templates/lib
            - packages/plugin-templates/bin
            - packages/plugin-templates/oclif.manifest.json

  publish-library:
    description: 'Publish library package'
    docker:
      - image: node:12
    working_directory: ~/cli/packages/templates
    steps:
      - attach_workspace:
          at: ~/cli
      - npm-release-management/publish:
          use_tarfile: true

  publish-plugin:
    description: 'Publish plugin package'
    working_directory: ~/cli/packages/plugin-templates
    docker:
      - image: node:12
    steps:
      - attach_workspace:
          at: ~/cli
      - npm-release-management/sign
      - npm-release-management/publish:
          use_tarfile: true
      - npm-release-management/verify-signed-package
      - ssh-config
      - npm-release-management/create-git-tag # this is looking up package.json
      - run: git push origin main

workflows:
  version: 2
  'salesforcedx-templates':
    jobs:
      - node-latest
      - node-12
      - node-10
      - cache:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - run-win-tests

  publish-workflow:
    when: << pipeline.parameters.publish >>
    jobs:
      - node-latest
      - node-12
      - node-10
      - run-win-tests
      - prepublish:
          requires:
            - run-win-tests
            - node-latest
            - node-12
            - node-10
      - hold: # Requires manual approval in Circle Ci
          type: approval
      - publish-library:
          filters:
            branches:
              only:
                - main
          requires:
            - prepublish
            - hold
      - publish-plugin:
          filters:
            branches:
              only:
                - main
          requires:
            - publish-library
