name: forcedotcom/salesforcedx-templates/commit-workflow
on:
  workflow_dispatch:
    #do we need these?
    inputs:
      fingerprint:
        description: ''
        required: false
        default: 1e:57:e5:df:0e:82:aa:ff:33:b7:8c:0f:9c:28:56:f3
      publish:
        required: true
      publish-type:
        required: false
        default: minor
jobs:
  #this should be a matrix instead, yeah?
  node-latest:
    defaults:
      run:
        working-directory: "~/cli"
    runs-on: ubuntu-latest
    container:
      image: node:latest
    steps:
    - uses: actions/checkout@v2
    - name: restore_cache
      uses: actions/cache@v2
      with:
        key: v2-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
        restore-keys: |-
          v2-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
          v2-npm-{{checksum ".circleci/config.yml"}}
    - name: Install dependencies
      run: yarn
    - name: Build plugin
      run: yarn build
    - name: Lint source files
      run: yarn lint
    - name: Testing
      run: yarn test
  node-14:
    defaults:
      run:
        working-directory: "~/cli"
    runs-on: ubuntu-latest
    container:
      image: node:14
    steps:
    - uses: actions/checkout@v2
    - name: restore_cache
      uses: actions/cache@v2
      with:
        key: v2-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
        restore-keys: |-
          v2-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
          v2-npm-{{checksum ".circleci/config.yml"}}
    - name: Install dependencies
      run: yarn
    - name: Build plugin
      run: yarn build
    - name: Lint source files
      run: yarn lint
    - name: Testing
      run: yarn test
  node-16:
    defaults:
      run:
        working-directory: "~/cli"
    runs-on: ubuntu-latest
    container:
      image: node:16
    steps:
    - uses: actions/checkout@v2
      #todo: add token
    - name: restore_cache
      uses: actions/cache@v2
      #todo: this should be the github caching instead
      with:
        key: v2-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
        restore-keys: |-
          v2-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
          v2-npm-{{checksum ".circleci/config.yml"}}
    - name: Install dependencies
      run: yarn
    - name: Build plugin
      run: yarn build
    - name: Lint source files
      run: yarn lint
    - name: Testing
      run: yarn test
  cache:
    if: ${{ !contains('refs/heads//.*/ refs/heads/main', github.ref) }}
    defaults:
      run:
        working-directory: "~/cli"
    runs-on: ubuntu-latest
    container:
      image: node:latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: yarn
    - name: save_cache
      uses: actions/cache@v2
      with:
        path: |-
          ~/cli/node_modules
          /usr/local/share/.cache/yarn
          /usr/local/share/.config/yarn
        key: v2-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
  run-win-tests:
    runs-on: ubuntu-latest
    steps:
    - run: git config --global core.autocrlf false
    - uses: actions/checkout@v2
    - name: restore_cache
      uses: actions/cache@v2
      with:
        key: dependency-cache-win1-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
        restore-keys: |-
          dependency-cache-win1-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
          dependency-cache-win1-
        path: node_modules
    - name: Install dependencies
      run: |-
        yarn --version
        node --version
        yarn
    - name: Compile
      run: yarn build
    - name: Running unit tests
      run: yarn test
  prepublish:
    if: contains('refs/heads/main', github.ref)
    defaults:
      run:
        working-directory: "~/cli"
    runs-on: ubuntu-latest
    container:
      image: node:14
    needs:
    - run-win-tests
    - node-latest
    - node-14
    - node-16
    steps:
    - uses: "./.github/actions/setup-publish"
    - uses: actions/upload-artifact@v2
      with:
        path: |-
          ./.git
          ./packages/templates/package.json
          ./packages/templates/*.tgz
          ./packages/plugin-templates/.gitignore
          ./packages/plugin-templates/package.json
          ./packages/plugin-templates/README.md
          ./packages/plugin-templates/yarn.lock
          ./packages/plugin-templates/messages
          ./packages/plugin-templates/lib
          ./packages/plugin-templates/bin
          ./packages/plugin-templates/oclif.manifest.json
  hold:
    environment:
      name: approval
    if: contains('refs/heads/main', github.ref)
    runs-on: ubuntu-latest
    steps:
    - run: echo 'approved'
  publish-library:
    if: contains('refs/heads/main', github.ref)
    defaults:
      run:
        working-directory: "~/cli/packages/templates"
    runs-on: ubuntu-latest
    container:
      image: node:14
    needs:
    - prepublish
    - hold
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: "~/cli"
    - name: Set .npmrc
      run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
    - name: Publish to NPM
      run: |-
        RELEASE_VERSION="$(node -pe "require('./package.json').version")"
        TARFILE=$(ls | grep $RELEASE_VERSION.tgz)
        echo "publishing to npm using ${TARFILE}"
        npm publish $TARFILE --access public
  publish-plugin:
    if: contains('refs/heads/main', github.ref)
    defaults:
      run:
        working-directory: "~/cli/packages/plugin-templates"
    runs-on: ubuntu-latest
    container:
      image: node:14
    needs:
    - publish-library
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: "~/cli"
      #todo: 
#     # This item has no matching transformer
#     - salesforce_npm_release_management_sign:
#     # This item has no matching transformer
#     - salesforce_npm_release_management_publish:
    - uses: "./.github/actions/ssh-config"
    - uses: "./.github/actions/create-git-tag"
    - run: git push origin main
    - name: Wait for version to become available on NPM registry
      run: |-
        PKG_NAME=$(cat package.json | jq -r .name)
        PKG_VERSION=$(cat package.json | jq -r .version)
        MAX_TRIES=30
        TRIES=0
        until (( $(curl -s 'https://registry.npmjs.org/'$PKG_NAME | jq '.["versions"]["'$PKG_VERSION'"]' | grep -c $PKG_VERSION ) )) || (($TRIES >= $MAX_TRIES )); do
            printf '.'
            sleep 1
            TRIES=$((TRIES+1))
        done
        if (($TRIES >= $MAX_TRIES)); then
            echo "Timeout waiting for tag. Exiting job"
            exit 1
        fi
      #todo: 
#     # This item has no matching transformer
#     - salesforce_npm_release_management_verify_signed_package:
