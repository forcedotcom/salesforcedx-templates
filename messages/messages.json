{
  "apiversion": "API version number",
  "outputdir": "folder for saving the created files",
  "template": "template to use for file creation",
  "AlphaNumericNameError": "Name must contain only alphanumeric characters.",
  "NameMustStartWithLetterError": "Name must start with a letter.",
  "EndWithUnderscoreError": "Name can't end with an underscore.",
  "DoubleUnderscoreError": "Name can't contain 2 consecutive underscores.",

  "ApexClassCommandDescription": "create an Apex class \n If not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.",
  "NameFlagDescription": "name of the generated Apex class",
  "MissingClassnameFlag": "Missing required flag:\n -n, --classname CLASSNAME  name of the generated Apex class\nSee more help with --help\n",

  "ApexTriggerCommandDescription": "create an Apex trigger\n If not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.",
  "triggerevents": "events that fire the trigger",
  "triggername": "name of the generated Apex trigger",
  "sobject": "sObject to create a trigger on",
  "MissingTriggernameFlag": "Missing required flag:\n -n, --triggername TRIGGERNAME  name of the generated Apex trigger\nSee more help with --help\n",

  "appname": "name of the generated Lightning app",
  "MissingAuraDir": "Lightning bundles must have a parent folder named 'aura'.",
  "LightningAppCommandDescription": "create a Lightning app\nIf not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.\nIf you don’t specify an outputdir, we create a subfolder in your current working directory with the name of your bundle. For example, if the current working directory is force-app and your Lightning bundle is called myBundle, we create force-app/myBundle/ to store the files in the bundle.",
  "MissingAuraFolder": "Lightning bundles must have a parent folder named 'aura'.",
  "MissingAppname": "Missing required flag:\n -n, --appname APPNAME  name of the generated Lightning app\nSee more help with --help\n",
  "LightningAppBundle": "A Lightning Application Bundle",
  "InvalidTemplate": "Expected --template=foo to be one of:",

  "LightningComponentCommandDescription": "create a bundle for an Aura component or a Lightning web component\nIf not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.\nIf you don’t specify an outputdir, we create a subfolder in your current working directory with the name of your bundle. For example, if the current working directory is force-app and your Lightning bundle is called myBundle, we create force-app/myBundle/ to store the files in the bundle.\nTo create a Lightning web component, pass --type lwc to the command. If you don’t include a --type value, Salesforce CLI creates an Aura component by default.",
  "componentname": "name of the generated Lightning component",
  "ComponentType": "type of the Lightning component",
  "MissingLWCDir": "Lightning bundles must have a parent folder named 'lwc'.",
  "MissingComponentName": "Missing required flag:\n -n, --componentname COMPONENTNAME  name of the generated Lightning component\nSee more help with --help\n",
  "MissingLWCFolder": "Lightning bundles must have a parent folder named 'lwc'.",

  "LightningEventCommandDescription": "create a Lightning event\nIf not supplied, the apiversion, template, and outputdir use default values.\nThe outputdir can be an absolute path or relative to the current working directory.\nIf you don’t specify an outputdir, we create a subfolder in your current working directory with the name of your bundle. For example, if the current working directory is force-app and your Lightning bundle is called myBundle, we create force-app/myBundle/ to store the files in the bundle.",
  "eventname": "name of the generated Lightning event",
  "MissingEventname": "Missing required flag:\n -n, --eventname EVENTNAME  name of the generated Lightning event\nSee more help with --help\n"
}
